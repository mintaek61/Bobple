plugins {
    id 'org.springframework.boot' version "${springBootVersion}"  // Spring Boot 플러그인 적용
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
}

repositories {
    mavenCentral()
    maven { url 'https://repo.maven.apache.org/maven2' }
    maven { url 'https://jcenter.bintray.com/' }
}

// 프로젝트 의존성 설정
dependencies {
    // 웹 개발 프레임워크
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Thymeleaf 템플릿 엔진
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // JPA (Java Persistence API) 및 데이터베이스 연동
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc' // JDBC 드라이버
    //json 파싱용
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    implementation 'org.springframework.data:spring-data-commons' // spring-data-commons 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'


    // MySQL 데이터베이스 드라이버
    runtimeOnly 'mysql:mysql-connector-java:8.0.30'

    // OAuth2 및 Spring Security (인증/인가)
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6' // Thymeleaf에서 Security 사용

    // Lombok (코드 자동 생성)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // 개발 편의 도구 (개발 환경에서만 필요)
    //developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // 테스트 프레임워크
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // JUnit 5 사용

    // JSON 라이브러리
    implementation 'org.json:json:20231013'

    // WebClient를 사용하려면 다음을 추가
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Reactor를 사용한 비동기 처리 및 스트리밍을 위해 필요
    implementation 'io.projectreactor:reactor-core'


//    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
//    implementation 'com.amazonaws:aws-java-sdk-s3:1.11.1000'

//    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
//    implementation 'com.ncloud.api:neointernal:1.2.0' // 네이버 클라우드 API 라이브러리



    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'


    implementation 'com.amazonaws:aws-java-sdk-s3:1.11.238' // AWS S3 SDK 추가

    // s3
    implementation 'com.amazonaws:aws-java-sdk-core:1.12.476'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.476'

    implementation 'org.jsoup:jsoup:1.15.3'

}

// 테스트 설정 (JUnit 5 사용)
tasks.named('test') {
    useJUnitPlatform()
}
